language: objective-c
osx_image: xcode9.3
branches:
  only:
  - master
  - develop
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  directories:
    - $HOME/Library/Caches/org.carthage.CarthageKit/dependencies
    - Carthage
    - vendor/bundle

before_install:
  - bundle install --path vendor/bundle
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - carthage bootstrap --no-use-binaries --cache-builds

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - LANG=en_US.UTF-8
    - WORKSPACE=RxCocoaNetworking.xcworkspace
    - IOS_FRAMEWORK_SCHEME="RxCocoaNetworking-iOS"
    - OSX_FRAMEWORK_SCHEME="RxCocoaNetworking-macOS"
    - TVOS_FRAMEWORK_SCHEME="RxCocoaNetworking-tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="RxCocoaNetworking-watchOS"
  matrix:
    - DESTINATION="OS=11.3,name=iPhone X"                   SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES" PLATFORM="iOS"
    - DESTINATION="OS=10.3.1,name=iPhone 7 Plus"            SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES" PLATFORM="iOS"
    - DESTINATION="OS=9.0,name=iPhone 6"                    SCHEME="$IOS_FRAMEWORK_SCHEME"     RUN_TESTS="YES" PLATFORM="iOS"
    - DESTINATION="arch=x86_64"                             SCHEME="$OSX_FRAMEWORK_SCHEME"     RUN_TESTS="YES" PLATFORM="macOS"
    - DESTINATION="OS=11.0,name=Apple TV 1080p"             SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES" PLATFORM="tvOS"
    - DESTINATION="OS=10.2,name=Apple TV 1080p"             SCHEME="$TVOS_FRAMEWORK_SCHEME"    RUN_TESTS="YES" PLATFORM="tvOS"
    - DESTINATION="OS=4.0,name=Apple Watch Series 2 - 42mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"  PLATFORM="watchOS"
    - DESTINATION="OS=3.1,name=Apple Watch Series 2 - 42mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" RUN_TESTS="NO"  PLATFORM="watchOS"

script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test;
    else
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build;
    fi

  # Build Framework in Release and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test;
    else
      xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build;
    fi

jobs:
  include:
    - stage: Danger
      script: bundle exec danger
    - stage: Pod lib lint
      script: bundle exec pod lib lint --verbose --allow-warnings
    - stage: Deploy Github
      script: skip
      before_deploy:
        - carthage build --no-skip-current --cache-builds
        - carthage archive RxCocoaNetworking
      deploy:
        - provider: releases
          api_key:
            secure: 
          file:
            - RxCocoaNetworking.framework.zip
          skip_cleanup: true
          overwrite: true
          on:
            repo: gobetti/RxCocoaNetworking
            tags: true
    - stage: Deploy Cocoapods
      script: skip
      deploy:
        - provider: script
          script: bundle exec pod trunk push
          skip_cleanup: true
          on:
            tags: true

after_success:
  - bash <(curl -s https://codecov.io/bash)
